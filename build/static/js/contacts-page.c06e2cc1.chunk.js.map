{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-operations.js","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","views/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","getAllContacts","state","contacts","items","getFilterContacts","createSelector","filter","normalizedFilter","toLowerCase","item","name","includes","Form","styled","form","Button","button","Span","span","Label","label","ContactForm","dispatch","useDispatch","useSelector","contactsSelectors","useState","setName","number","setNumber","console","log","onSubmit","e","payload","preventDefault","some","contact","alert","addRequest","axios","post","then","data","addSuccess","catch","error","addError","message","type","pattern","title","required","onChange","target","Li","li","ContactItem","id","find","onClick","deleteRequest","delete","deleteSuccess","deleteError","deleteContact","Ul","ul","ContactList","map","Filter","filterContacts","ContactsView","this","props","fetchContacts","className","Component","connect","fetchRequest","get","fetchSuccess","fetchError"],"mappings":"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","file":"static/js/contacts-page.c06e2cc1.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { createSelector } from 'reselect';\n\nexport const getAllContacts = state => state.contacts.items;\n\nexport const getContactById = id =>\n  createSelector([getAllContacts], items =>\n    items.find(contact => contact.id === id),\n  );\n\nconst getFilter = state => state.contacts.filter;\n\nexport const getFilterContacts = createSelector(\n  [getAllContacts, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(item =>\n      item.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport * as contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 6px;\n  border: 2px solid green;\n  color: green;\n  width: 200px;\n  margin-left: 1em;\n  padding: 0.25em 1em;\n  &:hover {\n    background: LemonChiffon;\n  }\n`;\nconst Span = styled.span`\n  margin-right: 10px;\n  display: inline-block;\n`;\n\nconst Label = styled.label`\n  margin-bottom: 15px;\n`;\n\n// const getContacts = state => state.contacts.items;\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getAllContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  console.log(contacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const unavailableName = contacts.some(contact => contact.name === name);\n    if (unavailableName) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  const handleChangeName = e => setName(e.target.value);\n  const handleChangeNumber = e => setNumber(e.target.value);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <Span>Name</Span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChangeName}\n        />\n      </Label>\n      <Label>\n        <Span>Number</Span>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          onChange={handleChangeNumber}\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import axios from 'axios';\nimport {\n  addRequest,\n  addSuccess,\n  addError,\n  deleteRequest,\n  deleteSuccess,\n  deleteError,\n  fetchRequest,\n  fetchSuccess,\n  fetchError,\n} from './contacts-action';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchSuccess(data)))\n    .catch(error => dispatch(fetchError(error)));\n};\n\nexport const addContact = payload => dispatch => {\n  // const contact = { ...payload };\n  console.log(payload);\n  dispatch(addRequest());\n\n  axios\n    .post('/contacts', payload)\n    .then(({ data }) => dispatch(addSuccess(data)))\n    .catch(error => dispatch(addError(error.message)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteSuccess(id)))\n    .catch(error => dispatch(deleteError(error.message)));\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\nimport * as contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 6px;\n  border: 2px solid red;\n  color: red;\n  width: 80px;\n  margin-left: 1em;\n  padding: 0.25em 1em;\n  &:hover {\n    background: LemonChiffon;\n  }\n`;\n\nconst Li = styled.li`\n  margin-bottom: 10px;\n`;\n\n// const getContactsById = id => state =>\n//   state.contacts.items.find(contact => contact.id === id);\n\nconst ContactItem = ({ id }) => {\n  const { name, number } = useSelector(contactsSelectors.getContactById(id));\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n  return (\n    <Li>\n      {name}: {number}\n      <Button type=\"button\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </Li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import ContactItem from './ContactItem';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport * as contactsSelectors from '../../redux/contacts/contacts-selectors';\n\nconst Ul = styled.ul`\n  list-style: none;\n  padding-left: 5px;\n`;\n\nconst ContactList = () => {\n  const contacts = useSelector(contactsSelectors.getFilterContacts);\n  return (\n    <Ul>\n      {contacts.map(({ id }) => (\n        <ContactItem key={id} id={id} />\n      ))}\n    </Ul>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts/contacts-action';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleChangeFilter = e => dispatch(filterContacts(e.target.value));\n\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input type=\"text\" onChange={handleChangeFilter} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { React, Component } from 'react';\nimport { connect } from 'react-redux';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport { fetchContacts } from '../redux/contacts/contacts-operations';\n\nclass ContactsView extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(fetchContacts()),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactsView);\n"],"sourceRoot":""}
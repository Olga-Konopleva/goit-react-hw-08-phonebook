{"version":3,"sources":["views/LoginView.module.scss","views/RegisterView.js"],"names":["module","exports","RegisterView","state","name","email","password","handleSubmit","e","preventDefault","props","onRegister","setState","handleChange","target","value","this","onSubmit","className","styles","form","label","type","onChange","Button","Component","mapDispatchToProps","register","connect","styled","button"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,UAAY,+B,oJCKxFC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,SAAAC,GACbA,EAAEC,iBACF,EAAKC,MAAMC,WAAW,EAAKR,OAC3B,EAAKS,SAAS,CAAER,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,EAGjDO,aAAe,YAAkC,IAAD,IAA9BC,OAAUV,EAAoB,EAApBA,KAAMW,EAAc,EAAdA,MAChC,EAAKH,SAAL,eAAiBR,EAAOW,K,4CAE1B,WAAU,IAAD,EAC2BC,KAAKb,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SACrB,OACE,8BACE,uBAAMW,SAAUD,KAAKT,aAAcW,UAAWC,IAAOC,KAArD,UACE,wBAAOF,UAAWC,IAAOE,MAAzB,UACE,sDACA,uBACEC,KAAK,OACLP,MAAOX,EACPA,KAAK,OACLmB,SAAUP,KAAKH,kBAGnB,wBAAOK,UAAWC,IAAOE,MAAzB,UACE,kEACA,uBACEC,KAAK,QACLP,MAAOV,EACPD,KAAK,QACLmB,SAAUP,KAAKH,kBAGnB,wBAAOK,UAAWC,IAAOE,MAAzB,UACE,wEACA,uBACEC,KAAK,WACLP,MAAOT,EACPF,KAAK,WACLmB,SAAUP,KAAKH,kBAGnB,cAACW,EAAD,CAAQF,KAAK,SAAb,mI,GAhDiBG,aAuDrBC,EAAqB,CACzBf,WAAYgB,KAGCC,sBAAQ,KAAMF,EAAdE,CAAkC1B,GAEjD,IAAMsB,EAASK,IAAOC,OAAV","file":"static/js/register-page.526813eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginView_form__3fa4_\",\"label\":\"LoginView_label__1LpgB\",\"container\":\"LoginView_container__2I2N0\"};","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { register } from '../redux/auth/auth-operations';\nimport styled from 'styled-components';\nimport styles from \"./LoginView.module.scss\";\n\nclass RegisterView extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onRegister(this.state);\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n  render() {\n    const { name, email, password } = this.state;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} className={styles.form}>\n          <label className={styles.label}>\n            <span>Имя</span>\n            <input\n              type=\"text\"\n              value={name}\n              name=\"name\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className={styles.label}>\n            <span>Почта</span>\n            <input\n              type=\"email\"\n              value={email}\n              name=\"email\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className={styles.label}>\n            <span>Пароль</span>\n            <input\n              type=\"password\"\n              value={password}\n              name=\"password\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <Button type=\"submit\">Зарегистрироваться</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onRegister: register,\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterView);\n\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 6px;\n  border: 2px solid green;\n  color: green;\n  width: 150px;\n  margin-top: 1em;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0.25em 1em;\n  &:hover {\n    background: LemonChiffon;\n  }\n`;\n"],"sourceRoot":""}